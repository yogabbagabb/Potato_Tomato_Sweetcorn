General Definitions:
	This documentation uses the word predictor to refer to the overarching type of
	data that we have at our disposal. For example, tave, vpdave and precip are all predictors.
	We use the word variant to differentiate between, say, vpdave5 and vpdave6. That is,
	vpdave6 is a variant of vpdave.

dataFiles
	catalog.R
		Stores the model configurations that were previously run using the function
		crop_model_inR.R
		We store these configurations, because making them is time consuming
	examineData.py
		Tests for certain conditions in the dataset; these conditions center around implications about Nullness and NonNullness in the dataset (eg if one variant of a predictor (say the variant tave5 in the predictor tave) is null, can we say that the other variants are also null)
	preprocessData.py
		The datasets that Yan initially passed to Aahan	(having names like potatoes_model_data_2016.csv, sweetcorn_model_data_2013.csv, tomatoes_model_data_2017.csv) all need to be detrended. That is, we need to obtain yield_ana from each of the datasets before we train models on them (this is just part of the design that Yan and others find reasonable). This code detrends the appropriate dataset (the potato dataset if we're working in the potato folder, tomato dataset if we're in the tomato folder etc) and does a bit more. That additional bit is creating aggregates (like the average value of a predictor across all variants: eg, store mean(tave5...tave8) into the dataset).

predictionCode
	formulaMaker.py
		Prints formulas to be run using any ols function, whether in python or in R, allowing for the addition of VPD, PRECIP, TAVE, VPD2, PRECIP2, TAVE2 where
			VPD = vpdave5 + vpdave6 + vpdave7 + vpdave8
			PRECIP = ...
			...
		
		For one function:

			VPD2 = vpdave5^2 + vpdave6^2 + vpdave7^2 + vpdave8^2 
			PRECIP2 = ...
			...
		For another:

			VPD2 = vpdave5 + vpdave6 + vpdave7 + vpdave8 + vpdave5^2 + vpdave6^2 + vpdave7^2 + vpdave8^2 
			PRECIP2 = ...
			...

	formulaMaker_scratch.py
		Prints formulas for all combinations of variants of a predictor (tave, vpdave, precip) where the combinations have 3 members, 4 members or 5 members

	crop_python_model_2.py
		This function tests model configuration C with python, to check if the results it obtains (the values of the statistics for RMSE and R2) match those obtained using R. This is specific to potato.
	crop_model_inR.R
		This function is the main prediction function for crop models (as of Aahan's
		implementation of them): Soybean, Potato, Tomato, Sweetcorn.
	Ignore crop_python_model.py
	printStats.py
		Prints the RMSE and R2 values from a dataframe obtained as a result of running the R prediction function.

visualizationCode
	makeScatter_predictedActual.py
		Makes certain scatter plots:
		Yan asked that models based on three combinations be tested. These three combinations
		were VPD + PRECIP, TAVE + PRECIP, VPDAVE + PRECIP + TAVE. After we train and test certain
		configurations of these three combinations, we make scatter plots of the yield that
		each configuration predicts versus the actual yield of a crop (ie potato, tomato or sweetcorn). This code makes those scatter plots.
	showKnots.py
		Plots loess diagrams for certain variants (eg X5...X8) of certain predictors (eg tave or precip) in one of two ways. Either diagrams are all plotted on one plot with several 
		subsections for each plot or diagrams are each plotted on a separate, distinct plot.
			Knots were only chosen for potato; hence the values that appear in any of the code
			are by default particular to potato; you will have to determine and add knot values
			for sweetcorn or tomato, by your visual inspection.

	showTrend
		Plots year against yield and then plots a trend function regressing yield
		against year (you need to specify
		which type of trend function you will use in the function yield_trend)

Procedure:
	Run examineData.py to determine whether certain conditions hold:
		1) If one variant of a predictor (say the variant tave5 in the predictor tave) is null, can we say that the other variants are also null
		2) If (1) holds, then if one type of climate variable (say tave or vpdave or precip)
		is null, are all the other types of variables also null?
			If these conditions do not hold, then the R model prediction code is in need of manipulation.
			Fortunately, these conditions do hold for the three crops Potato, Tomato and Sweetcorn.
	Run showTrend.py with both a linear and quadratic trend. Assess which trend is better
	and call the favored trend t.

	Run preprocessData.py with this trend t to obtain the csv file with preprocessed data.

	Run showKnots.py
		Assess whether lowess trends are linear or quadratic. 
		If it happens that vpdave5 and vpdave6 display a quadratic trend
			and vpdave7, vpdave8, vpdave9 display a linear trend, claim that vpdave generally
			displays a linear trend. More generally, identify the trend that any predictor
			follows based on what the majority of its variants follow.
	Run crop_model_inR.R
		For a predictor (from tave, precip, vpdave):
			For this given predictor, call the favored trend t.
				Run  crop_model_inR.R, exhaustively, on all 16 combinations that can be obtained
				by looking at combinations of 3 out of 5 variants, 4 out of 5 variants and
				then 5 out of 5 variants (these combinations should all respect* the trend t) of a particular predictor.
				Whatever combination yields the best leave one out combination (the lowest
				RMSE) will be the combination that we use whenever we make models that
				involve the particular predictor.

				*Respect the trend t:
					By way of example, suppose that we intend to test the configuration using
					the variants tave5, tave6 and tave7. Then if the trend is linear, the
					model configuration will be yield_ana ~ tave5 + tave6 + tave7. If the 
					trend is quadratic, then the model configuration will be
						yield_ana ~ tave5 + I(tave5^2) + tave6 + I(tave6^2) + tave7 + I(tave7^2)
	Use printStats.py to determine which combination yields the lowest RMSE. Call this
	combination (aka the subset of 5 variants from May to September that we use) the
	month coverage.

	
	Run crop_model_inR.R on all 16 combinations of the three predictor combinations Yan
	desired we test: VPDAVE + PRECIP, TAVE + PRECIP, VPDAVE + TAVE + PRECIP (16 is obtained
	by allowing for, in any predictor combination, a predictor to be linear or quadratic).
	Use the month coverage that we determined in the previous step.

